/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

@import 'fonts';

*::selection { 
	@apply bg-salmon;
}

a::selection { 
	@apply bg-white;
}

// * {
// 	transition: background-image .2s ease-in-out, background-color .2s ease-in-out, background .2s ease-in-out, color .2s ease-in-out;
// }

a {
	@apply no-underline text-salmon font-bold inline-block mb-1;
	border-bottom: 3px solid config('colors.salmon');
}

hr {
	@apply border-b border-salmon text-salmon opacity-75;
	/* or your current background color */
	background-color: config('colors.blue');
	background: url('/assets/images/noise-bg.png');
	position: relative;
}

hr::before {
	font-size: 1rem;
	color: inherit;
	position: absolute;
	content: attr(word);
	display: block;
	height: 1rem;
	top: -.7rem;
	left: 50%;
	transform: translatex(-50%);
	background: inherit;
	padding: 0 .5rem;
}


/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

.noice-bg {
	background-color: config('colors.blue');
	background: url('/assets/images/noise-bg.png');
}

.name, .skill {
	@apply font-display;
	font-size: 2rem;

	small {
		@apply font-serif;
		font-size: 1rem;
	}
}

.from {
	@apply font-display mb-6;
	font-size: 1.5rem;

	small {
		@apply font-serif;
		font-size: 1rem;
	}
}

.about {
	max-width: 35ch;
}

.bottom-graphic {
	transform: scale(.3);
	transform-origin: 100% 100%;
}

@screen sm {
	.name {
		height: 170px;
		width: 50%;
	}

	.skill {
		margin-top: 35px;
	}
}

@screen md {
	.bottom-graphic {
		transform: scale(.4);
	}

	.name, .skill {
		font-size: 3rem;
	}

	.name {
		height: 220px;
		width: auto;
		position: relative;
		margin-bottom: 80px;

		&::after {
			//transition: background-color .3s ease-in-out;
		    content: "";
		    display: block;
		    height: 13px;
		    width: 13px;
		    @apply bg-white;
		    position: absolute;
		    right: -32px;
		    bottom: 15px;
		    border-radius: 100px;
		}
	}

	.skill {
		margin-top: 112px;
		margin-left: 50px;
	}

	.from {
		margin-left: 50px;
		font-size: 2.2rem;
	}
}

@screen lg {
	.bottom-graphic {
		transform: scale(.6);
	}

	.name, .skill {
		font-size: 4.5rem;
	}

	.name {
		height: 333px;

		&::after {
		    right: -32px;
		    bottom: 30px;
		}
	}

	.skill {
		margin-top: 170px;
	}

	.from {
		margin-left: 50px;
	}
}

svg#light-mode-toggle {
  cursor: pointer;
}


svg#light-mode-toggle path#bulp {
  transform-origin: 50% 50%;
}

body.light {
	@apply text-blue;

	svg#light-mode-toggle {
		@apply text-blue;
	}

	&.noice-bg {
		background-color: config('colors.white');
		background: url('/assets/images/noise-bg-light.png');
	}

	.name::after {
		@apply bg-blue;
	}

	.bottom-graphic svg path:first-of-type{
		@apply text-salmon;
	}

	.bottom-graphic svg path:last-of-type{
		@apply text-pink;	
	}

	aÂ {
		@apply text-pink;
		border-color: config('colors.pink');
	}
}	

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */